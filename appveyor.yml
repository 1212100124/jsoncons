version: '{build}'

configuration:
- Release

environment:
  vsversion: none
  arch: default
  matrix:
    - platform: vs
      vsversion: 2015
      arch: x86
      FLAGS: ""
      GENERATOR: Visual Studio 14 2015

    - platform: vs
      vsversion: 2015
      arch: x86
      FLAGS: ""
      GENERATOR: Visual Studio 14 2015

    - platform: vs
      vsversion: 2015
      arch: x86
      FLAGS: "/permissive- /std:c++latest /utf-8"
      GENERATOR: Visual Studio 14 2015

    - platform: vs
      vsversion: 2015
      arch: x64
      FLAGS: ""
      GENERATOR: Visual Studio 14 2015

    - platform: vs
      vsversion: 2017
      arch: x64
      FLAGS: ""
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      GENERATOR: Visual Studio 15 2017

    - platform: vs
      vsversion: 2017
      arch: x64
      FLAGS: "/permissive- /std:c++latest /utf-8"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017

    - platform: vs
      vsversion: 2017
      arch: ARM
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017 
      GENERATOR: Visual Studio 15 2017

init: 
  - git config --global core.autocrlf input

install:
  - if "%COMPILER%"=="mingw" set PATH=C:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0\mingw64\bin;%PATH%
  - if "%COMPILER%"=="mingw" g++ --version

build_script:
  - cmake --build . --config Release

before_build:
  - cmake . -G "%GENERATOR%" . -DBUILD_TESTS=ON -DCMAKE_CXX_FLAGS="%FLAGS%" -DCMAKE_IGNORE_PATH="C:/Program Files/Git/usr/bin"

build_script:
  - cmake --build . --config Release

test_script:
  - set "testplatform=%platform%"
  # Can not run ARM builds on x86/x64 build images
  - if %arch%==ARM (
      set "testplatform=none"
    )
  - if %testplatform%==vs ctest -C Release -V -j

