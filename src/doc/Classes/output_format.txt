    jsoncons::output_format

The output_format class is an instantiation of the basic_output_format class template that uses char as the character type.

### Header

    #include "jsoncons/output_format.hpp"

### Member constants

Floating point format | Description | Default precision | Example
-------------      | -------------  | ------------- | ------------- 
truncate_trailing_zeros      | Truncate trailing zeros but keep one if immediately after a decimal point. Precision means the maximum number of significant digits. | 16 | 0 is written as 0.0         
fixed | Write floating point values in fixed-point notation. Precision means the number of digits to appear after the decimal point. | 6 | 0 is written as 0.000000 under the default precision
scientific | Write floating-point values in scientific notation. Precision means the number of digits to appear after the decimal point. | 6 | |             

Floating point formats. The default format is `truncate_trailing_zeros`. This is the preferred format for json serializiation. 

    default_indent
The default indent is 4

### Constructors

    output_format()
Constructs an `output_format` with default values. 

    output_format(bool indenting)
Deprecated. Instead use `pretty_print` on [[json]] values, or use `indenting' parameter in [[json_serializer]] constructor 

### Accessors

    size_t indent() const
Returns the level of indentation, the default is 4

    size_t precision() const 
Returns the floating-point decimal precision, the default is 16 for the `truncate_trailing_zeros` floating point format, and 17 for `fixed` and `scientific`.

    bool truncate_trailing_zeros_notation() const

    std::ios_base::fmtflags set_format_flags() const

    std::ios_base::fmtflags unset_format_flags() const

    bool escape_all_non_ascii() const
The default is false

    bool escape_solidus() const
The default is false

    bool replace_nan() const
The defult is `true`

    bool replace_pos_inf() const
The defult is `true`

    bool replace_neg_inf() const
The defult is `true`

    std::string nan_replacement() const 
The default is "null"

    std::string pos_inf_replacement() const 
The default is "null"

    std::string neg_inf_replacement() const 
The default is "null"

    bool indenting() const
Deprecated. 

### Modifiers

    void indent(size_t value)

    void set_floating_point_format(fp_format format)
Sets the floating point format using the default precision. Valid values for format are `output_format::truncate_trailing_zeros`, `output_format::fixed` and `output_format::scientific`.

    void set_floating_point_format(fp_format format, size_t prec)
Sets the floating point format and the specified precision. Valid values for format are `output_format::truncate_trailing_zeros`, `output_format::fixed` and `output_format::scientific`.

    void set_format_flags(std::ios_base::fmtflags flags)

    void unset_format_flags(std::ios_base::fmtflags flags)

    void escape_all_non_ascii(bool value)

    void escape_solidus(bool value)

    void replace_nan(bool replace)

    void replace_inf(bool replace)

    void replace_pos_inf(bool replace)

    void replace_neg_inf(bool replace)

    void nan_replacement(const std::string& replacement)

    void pos_inf_replacement(const std::string& replacement)

    void neg_inf_replacement(const std::string& replacement)
Sets replacement text for negative infinity.

    void indenting(bool value)
Deprecated.

    void precision(size_t prec)
Deprecated, instead use `set_floating_point_format`

    void void fixed_decimal_places(size_t prec)
Deprecated, instead use `set_floating_point_format`

