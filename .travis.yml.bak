language: cpp
dist: trusty
matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.8
      env: CXX=g++-4.8 CMAKE_OPTIONS="-DCXXSTD=11"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env: CXX=g++-4.9

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env: CXX=g++-5

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env: CXX=g++-6

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - clang-3.9
            - g++-4.8-aarch64-linux-gnu
            - gcc-4.8-aarch64-linux-gnu
            - g++-4.8-multilib
            - gcc-4.8-multilib
            - qemu
            - qemu-system-arm
      env: CXX=clang++-3.9 CC=clang-3.9 COMPILER=clang CLANG=3.9 CROSS_COMPILE=1 ARM_ARCH_DIR=aarch64-linux-gnu GCC_VER=4.8.4 ARM_SETTINGS="armv8-a -target aarch64-linux-gnueabi"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0
          packages:
            - g++-4.9
            - clang-4.0
      env: CXX=clang++-4.0

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - g++-4.9
            - clang-5.0
      env: CXX=clang++-5.0

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - clang-6.0
      env: CXX=clang++-6.0

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - clang-6.0
      env: CXX=clang++-6.0 CXXFLAGS="-DJSONCONS_NO_DEPRECATED" 

    - os: osx
      osx_image: xcode8.1
      compiler: clang
      env: CXX=clang++ CMAKE_OPTIONS="-DCXXSTD=11"

    - os: osx
      osx_image: xcode8.2
      compiler: clang
      env: CXX=clang++ CMAKE_OPTIONS="-DCXXSTD=11"

    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: CXX=clang++ CMAKE_OPTIONS="-DCXXSTD=11"

    - os: osx
      osx_image: xcode9
      compiler: clang
      env: CXX=clang++ CMAKE_OPTIONS="-DCXXSTD=11"

    - os: osx
      osx_image: xcode9.1
      compiler: clang
      env: CXX=clang++ CMAKE_OPTIONS="-DCXXSTD=11"

    - os: osx
      osx_image: xcode9.2
      compiler: clang
      env: CXX=clang++ CMAKE_OPTIONS="-DCXXSTD=11"

    - os: osx
      osx_image: xcode9.3
      compiler: clang
      env: CXX=clang++ CMAKE_OPTIONS="-DCXXSTD=11"

    - os: osx
      osx_image: xcode9.4
      compiler: clang
      env: CXX=clang++ CMAKE_OPTIONS="-DCXXSTD=11"

install:
    - if [[ "$CROSS_COMPILE" == 1 ]] ; then
        if [[ "$ARM_ARCH_DIR" == "aarch64-linux-gnu" ]] ; then
          mkdir $HOME/linker_bin ;
          ln -s /usr/bin/aarch64-linux-gnu-ld $HOME/linker_bin/ld ;
          echo "SETTING GNU LINKER DIR" ;
          ls -al $HOME/linker_bin/ld ;
          cmake . -DBUILD_TESTS=ON -DCROSS_COMPILE_ARM=ON -DARM_ARCH_DIRECTORY="$ARM_ARCH_DIR" -DARM_GCC_VER="$GCC_VER" -DTARGET_ARCH="$ARM_SETTINGS --prefix=$HOME/linker_bin/"  ${CMAKE_OPTIONS};
        else
          cmake . -DBUILD_TESTS=ON -DCROSS_COMPILE_ARM=ON -DARM_ARCH_DIRECTORY="$ARM_ARCH_DIR" -DARM_GCC_VER="$GCC_VER" -DTARGET_ARCH="$ARM_SETTINGS"  ${CMAKE_OPTIONS};
        fi
      else
        cmake . -DBUILD_TESTS=ON  ${CMAKE_OPTIONS};
      fi
    - make -j2 test_jsoncons
    - cd tests
script:
    - if [[ "$CROSS_COMPILE" == 1 ]]; then
        if [[ "$ARM_ARCH_DIR" == "aarch64-linux-gnu" ]]; then
          qemu-aarch64 -L /usr/aarch64-linux-gnu/ ./test_jsoncons ;
        else
          qemu-arm -L /usr/arm-linux-gnueabi/ ./test_jsoncons ;
        fi
      else
        ./test_jsoncons;
      fi
