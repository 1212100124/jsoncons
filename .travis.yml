language: cpp
dist: xenial
sudo: required

matrix:
  include:

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env: COMPILER=gcc VERSION=5  CXXFLAGS="-std=gnu++11" 

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env: COMPILER=gcc VERSION=5  CXXFLAGS="-std=c++11" 

before_install:
    - |
      # Configure build variables
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        if [[ "$COMPILER" == "gcc" ]]; then
          export CXX=g++-$VERSION CC=gcc-$VERSION;
        fi
        if [[ "$COMPILER" == "clang" ]]; then
          export CXX=clang++-$VERSION CC=clang-$VERSION;
        fi
      elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        export CXX=clang++ CC=clang;
      fi
install:
    # get CMake (only for systems with brew - macOS)
    - |
     if [[ (-x $(which brew)) ]]; then
       brew update
       brew install cmake 
       brew upgrade cmake
       cmake --version
     fi

    - cmake . -DBUILD_TESTS=ON  ${CMAKE_OPTIONS};
    - make -j2 test_jsoncons
    - cd tests
script:
    - if [[ "$JSONCONS_VALGRIND" == 1 ]]; then
        ctest -T memcheck;
      fi
    - if [[ "$CROSS_COMPILE" == 1 ]]; then
        if [[ "$ARM_ARCH_DIR" == "aarch64-linux-gnu" ]]; then
          qemu-aarch64 -L /usr/aarch64-linux-gnu/ ./test_jsoncons ;
        else
          qemu-arm -L /usr/arm-linux-gnueabi/ ./test_jsoncons ;
        fi
      else
        ./test_jsoncons;
      fi
