dist: trusty

sudo: required

addon_shortcuts:
  clang50: &clang50
    apt:
      sources:
        - llvm-toolchain-trusty-5.0
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise
      packages:
        - clang-5.0
        - libc++-dev
        - libboost-all-dev

  clang38: &clang38
    apt:
      sources:
        - llvm-toolchain-trusty-3.8
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise
      packages:
        - clang-3.8
        - libc++-dev
        - libboost-all-dev

  gcc6: &gcc6
    apt:
      sources:
        - ubuntu-toolchain-r-test
      packages:
        - g++-6
        - libboost-all-dev

  gcc7: &gcc7
    apt:
      sources:
        - ubuntu-toolchain-r-test
      packages:
        - g++-7
        - libboost-all-dev

addons:
  apt:
    update: true
    packages:
      - cmake

before_install:
  - curl -L http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -
  - echo 'deb http://llvm.org/apt/trusty/ llvm-toolchain-trusty-3.8 main' | sudo tee /etc/apt/sources.list
  - chmod +x tests/build/cmake/run_tests.sh

matrix:
  include:
    - { env: 'STD=11 CXX=g++-6 CMAKEFLAGS=-fsanitize=undefined', addons: *gcc6 }
    - { env: 'STD=11 CXX=g++-6 CMAKEFLAGS=-DNO_DEPRECATED=YES', addons: *gcc6 }
    - { env: 'STD=11 CXX=g++-7 CMAKEFLAGS=-fsanitize=undefined', addons: *gcc7 }
    #- { env: 'STD=11 CXX=g++-7 CMAKEFLAGS=-DNO_DEPRECATED=YES', addons: *gcc7 }
    #- { env: 'STD=11 CXX=clang++-3.8 CMAKEFLAGS="-fsanitize=undefined -lubsan"', addons: *clang38 }
    #- { env: 'STD=11 CXX=clang++-5.0', addons: *clang50 }

  allow_failures:
    #- { env: 'STD=11 CXX=clang++-3.8 CMAKEFLAGS=-fsanitize=undefined', addons: *clang38 }
    #- { env: 'STD=11 CXX=clang++-5.0', addons: *clang50 }

script:
  - cd tests/build/cmake
  - cmake $CMAKEFLAGS .
  - make -j2
  - ./run_tests.sh

