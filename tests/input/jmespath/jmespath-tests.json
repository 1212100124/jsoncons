[
    /*{
        "annotation" : "Select a value with an identifier",
        "input" : "{\"a\": \"foo\", \"b\": \"bar\", \"c\": \"baz\"}",
        "expression" : "a",
        "expected" : "\"foo\""
    },
    {
        "annotation" : "Select nested values in json object with subexpression",
        "input" : "{\"a\": {\"b\": {\"c\": {\"d\": \"value\"}}}}",
        "expression" : "a.b.c.d",
        "expected" : "\"value\""
    },
    {
        "annotation" : "Select nested values in json object with subexpression, key does not exist",
        "input" : "{\"a\": {\"b\": {\"c\": {\"d\": \"value\"}}}}",
        "expression" : "b.c.d.e",
        "expected" : "null"
    },
    {
        "annotation" : "Index expression",
        "input" : "[\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]",
        "expression" : "[1]",
        "expected" : "\"b\""
    },
    {
        "annotation" : "Index expression larger than list",
        "input" : "[\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]",
        "expression" : "[6]",
        "expected" : "null"
    },
    {
        "annotation" : "Negative index",
        "input" : "[\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]",
        "expression" : "[-2]",
        "expected" : "\"e\""
    },
    {
        "annotation" : "Combine identifiers, sub expressions, and index expressions",
        "input" : "{\"a\": {\"b\": {\"c\": [{\"d\": [0, [1, 2]]},{\"d\": [3, 4]}]}}}",
        "expression" : "a.b.c[0].d[1][0]",
        "expected" : "1"
    },*/
    {
        "annotation" : "Slicing",
        "input" : "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",
        "expression" : "[0:5]",
        "expected" : "[0,1,2,3,4]"
    }/*,
    {
        "annotation" : "Slicing",
        "input" : "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",
        "expression" : "[5:10]",
        "expected" : "[5,6,7,8,9]"
    },
    {
        "annotation" : "Slicing - omit start value",
        "input" : "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",
        "expression" : "[:5]",
        "expected" : "[0,1,2,3,4]"
    },
    {
        "annotation" : "Slicing - omit end value",
        "input" : "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",
        "expression" : "[5:]",
        "expected" : "[5,6,7,8,9]"
    },
    {
        "annotation" : "Slicing - select only even elements",
        "input" : "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",
        "expression" : "[::2]",
        "expected" : "[0,2,4,6,8]"
    },
    {
        "annotation" : "Slicing - create in reverse order",
        "input" : "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",
        "expression" : "[::-1]",
        "expected" : "[9,8,7,6,5,4,3,2,1,0]"
    },
    {
        "annotation" : "List Projection",
        "input" : "{\"people\": [{\"first\": \"James\", \"last\": \"d\"},{\"first\": \"Jacob\", \"last\": \"e\"},{\"first\": \"Jayden\", \"last\": \"f\"},{\"missing\": \"different\"}],\"foo\": {\"bar\": \"baz\"}}",
        "expression" : "people[*].first",
        "expected" : "[\"James\",\"Jacob\",\"Jayden\"]"
    }*/
]
